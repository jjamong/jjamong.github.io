<!DOCTYPE html>
<html lang="ko">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <meta name="generator" content="Hugo 0.59.1" />
  <title>짜몽 개발 연구소</title>

  
  <link rel="canonical" href="http://jjamong.github.io">
  <meta name="title" content="짜몽 개발 연구소">
  <meta name="keywords" content="웹, 서버, 프론트엔드, 백엔드, DB 등 IT 개발 블로그/Docs">
  <meta name="description" content="짜몽 개발 연구소는 IT 개발 지식과 경험을 토대로 작성된 가이드 문서를 제공합니다.">

  
  
<link rel="shortcut icon" href="/favicons/favicon.ico">
<link rel="apple-touch-icon" href="/favicons/apple-icon-180x180.png" sizes="180x180">
<link rel="icon" type="image/png" href="/favicons/favicon-16x16.png" sizes="16x16">
<link rel="icon" type="image/png" href="/favicons/favicon-32x32.png" sizes="32x32">
<link rel="icon" type="image/png" href="/favicons/android-icon-36x36" sizes="36x36">
<link rel="icon" type="image/png" href="/favicons/android-icon-48x48.png" sizes="48x48">
<link rel="icon" type="image/png" href="/favicons/android-icon-72x72.png" sizes="72x72">
<link rel="icon" type="image/png" href="/favicons/android-icon-96x96.png" sizes="96x96">
<link rel="icon" type="image/png" href="/favicons/android-icon-144x144.png" sizes="144x144">
<link rel="icon" type="image/png" href="/favicons/android-icon-192x192.png" sizes="192x192">
  
  <link type="text/css" rel="stylesheet" href="/css/fonts.css" />
<link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700">













<link rel="stylesheet" type="text/css" href="https://jjamong.github.io/styles.16abf5b1cc2291fb5f04130c3d1378955ee18f37f849f3ca52a9d275f0c30419.css" integrity="sha256-Fqv1scwikftfBBMMPRN4lV7hjzf4SfPKUqnSdfDDBBk=">

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"
  integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">


<link type="text/css" rel="stylesheet" href="/css/monokai-sublime.css" />
  
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-149836281-1"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'UA-149836281-1');
  </script>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css">
</head>

<body class="has-navbar-fixed-top">
  <section class="wrap">
    <header>
  <nav class="navbar is-fixed-top is-transparent">
    <div class="container is-fluid">
      <div class="navbar-brand">
        <div class="logo-area">
          <a class="navbar-item logo" href="/" ></a>
          <h1 class="logo-text">짜몽 개발 연구소</h1>
        </div>
        <span class="navbar-burger burger" data-target="navbarMenu">
          <span></span>
          <span></span>
          <span></span>
        </span>
      </div>
      <div id="navbarMenu" class="navbar-menu">
        <div class="navbar-end">
          <span class="navbar-item">
            <a href="javascript:alert('comming soon')">PORTFOLIO</a>
          </span>
          <span class="navbar-item">
            <a href="javascript:alert('comming soon')">BLOG</a>
          </span>
          <span class="navbar-item">
            <a href="/docs/front/react/" class="is-active">DOCS</a>
          </span>
          <span class="navbar-item">
            <a href="javascript:alert('comming soon')">STUDY</a>
          </span>
          <span class="navbar-item"></span>
          
          
          
        </div>
      </div>
    </div>
  </nav>

</header>
    
    <div class="container main">
      <div class="content-main content">
        <ul class="content-list"><li>
            <span class="list-date">2019-12-07</span>
            <div class="list-title"><a href="/docs/front/react/setting/redux/">Redux 적용</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/setting/redux/">
                 Redux 설치 $ yarn add redux redux-actions react-redux redux-pender immutable  
                
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-12-07</span>
            <div class="list-title"><a href="/docs/front/react/setting/router/">Router 적용</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/setting/router/">
                 Router 설치 $ yarn add react-router-dom  
                
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-11</span>
            <div class="list-title"><a href="/docs/front/react/setting/sass/">Sass 적용</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/setting/sass/">
                CSS Module 설정 CSS Module은, CSS를 모듈화하여 사용하는 방식이다. CSS를 웹팩을 통해서 불러오면, 고유화된 클래스네임이 이뤄진 객체가 반환되며,
{ box: 'src-App__box--mjrNr' }  그리고 클래스를 적용하려면 className={style.box} 이와 같이 사용한다.
webpack.config.js 파일에서 아래와 같이 수정한다. webpack.config.js 는 나중에 리액트를 빌드하는 과정에서 사용되는 환경설정 파일입니다.
(...) { // Options for PostCSS as we reference these options twice // Adds vendor prefixing based on your specified browser support in // package.json loader: require.
                …
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-11</span>
            <div class="list-title"><a href="/docs/front/react/component/state/">state</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/component/state/">
                 props는 보통 부모 컴포넌트가 설정하며, 컴포넌트 자신은 해당 props를 읽기 전용으로만 사용할 수 있다.
컴포넌트 내부에서 업데이트 할 수 있는 값을 사용하려면 state를 써야한다.
state 설정 JSX 내부에서 값 설정 setState 함수로 state값을 업데이트 한다.
class MyComponent extends Component { constructor(props) { super(props); this.state = { number: 0 } } render() { return ( &lt;div&gt; &lt;div&gt;숫자 : {this.state.number}&lt;/div&gt; &lt;button onClick={()=&gt; { this.setState({ number: this.state.number + 1 }) }} &gt;더하기&lt;/button&gt; &lt;/div&gt; ); } } // 버튼 세번 클릭 시 // 숫자 : 3  
                
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-10</span>
            <div class="list-title"><a href="/docs/front/react/component/component/">Component(컴포넌트)</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/component/component/">
                 모듈 내보내기(export) // MyComponent.js export default MyComponent;  모듈 불러오기(import) import MyComponent from './MyComponent'; // function App() { return ( &lt;div&gt; &lt;div&gt;App&lt;/div&gt; &lt;MyComponent /&gt; &lt;/div&gt; ); } // App // MyComponent  
                
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-10</span>
            <div class="list-title"><a href="/docs/front/react/jsx/">JSX</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/jsx/">
                JSX 문법 컴포넌트에 여러 요소가 있다면 부모 요소 하나로 꼭 감싸야 한다. 또한 br, input 등 단일 태그들도 닫아야 한다.
// 올바른 예 return ( &lt;div&gt; &lt;h1&gt;리액트 h1&lt;/h1&gt; &lt;h2&gt;리액트 h2&lt;/h2&gt; &lt;br/&gt; &lt;/div&gt; ); // 에러 발생 return ( &lt;h1&gt;리액트 h1&lt;/h1&gt; &lt;h2&gt;리액트 h2&lt;/h2&gt; &lt;br&gt; );  자바스크립트 표현법 const text = &quot;리액트 h2&quot;; const check = true; const style = { width: '100px', height: '100px', background: 'red' }; return ( &lt;div&gt; &lt;h1&gt;리액트 h1&lt;/h1&gt; &lt;h2&gt;{text}&lt;/h2&gt; {check ?
                …
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-10</span>
            <div class="list-title"><a href="/docs/front/react/component/props/">props</a></div>
              <p class="list-desc">
                <a href="/docs/front/react/component/props/">
                props는 properties를 줄인 것으로, 컴포넌트 속성을 설정한다.
props 값 설정 props 값 설정 디폴트 값 class MyComponent extends Component { static defaultProps = { name: 'props1' } render() { return ( &lt;div&gt; MyComponent {this.props.name} &lt;/div&gt; ); } } // MyComponent props1  props 값 설정 값 재정의 class MyComponent extends Component { static defaultProps = { name: 'props1' } render() { return ( &lt;div&gt; MyComponent {this.props.name} &lt;/div&gt; ); } } MyComponent.
                …
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-10</span>
            <div class="list-title"><a href="/docs/etc/vscode/">VS Code</a></div>
              <p class="list-desc">
                <a href="/docs/etc/vscode/">
                확장 프로그램 언어 관련 Korean Language Pack for Visual Studio Code VS code 한국어 언어 팩 플러그인.
SASS 관련 Sass VSCode용 Indented Sass 구문 강조 표시, 자동 완성 및 형식
Live Sass Compiler SASS/SCSS 파일을 실시간으로 컴파일하여 브라우저에 재로드.
React 관련 Redux DevTools (크롬) ESLint 자바스크립트 문법을 체크한다.
Relative Path 상대 경로에 있는 파일경로를 편하게 작성할 수 있는 플러그인
Guides 들려쓰기 가이드 라인을 표기
Reactjs code snippets 리액트 관련 스니펫 모음.
                …
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-10</span>
            <div class="list-title"><a href="/docs/etc/yarn/yarn/">yarn</a></div>
              <p class="list-desc">
                <a href="/docs/etc/yarn/yarn/">
                 Yarn(얀)은 자바스크립트 패키지 매니저다.
설치 https://yarnpkg.com/en/docs/install#windows-stable
$ yarn --version // 1.19.1  
                
                </a>
              </p>
          </li><li>
            <span class="list-date">2019-11-07</span>
            <div class="list-title"><a href="/docs/etc/hugo/tempates/introduction/">Hugo Templating 소개</a></div>
              <p class="list-desc">
                <a href="/docs/etc/hugo/tempates/introduction/">
                https://gohugo.io/templates/introduction/
Hugo는 템플릿의 기준으로 Go의 html/template 및 text/template 라이브러리를 사용한다.
기본 구문 Go 템플릿은 변수와 기능이 추가된 HTML파일이다. Go Template 변수와 기능은 {{}}내에서도 이용할 수 있다.
미리 정의된 변수 액세스 미리 정의된 변수는 현재 범위에 이미 존재하는 변수 (아래의 변수 섹션의 .Title 예제처럼) 또는 사용자 지정 변수일 수 있음 (같은 섹션의 $address 예시처럼.)
{{ .Title }} {{ $address }}  함수에 대한 매개변수는 공백으로 구분된다. 일반적인 구문은 다음과 같다.
                …
                </a>
              </p>
          </li></ul>
        
    </div>

    
<script src="/js/burger-menu.js"></script>
<script src="/js/jquery-3.3.1.min.js"></script>

<script src="/js/landing-scripts.js"></script>

<script src="/js/common.js"></script>


<script src="/js/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

    <div class="btn-top"></div>
<footer class="footer">
  
</footer>
  </section>
</body>
</html>