<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on 짜몽 기술 LAB</title>
    <link>https://jjamong.github.io/docs/aws/</link>
    <description>Recent content in AWS on 짜몽 기술 LAB</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 27 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jjamong.github.io/docs/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>EC2</title>
      <link>https://jjamong.github.io/docs/aws/ec2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/aws/ec2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>서버 아키텍처</title>
      <link>https://jjamong.github.io/docs/aws/ec2/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/aws/ec2/architecture/</guid>
      <description>단일서버 가장 기본적인 서버 구성으로 테스트 서버나, 간단한고 작은 서비스를 할 때 많이 사용된다.
클라이언트는 웹, 애플리케이션은 웹서버, 데이터베이스는 Mysql과 같은 RDB 등으로 생각할 수 있다.
장점  환경 구축이 쉬움  단점  전체 서비스에 장애가 생길 확률이 높음 =&amp;gt; 애플리케이션, 데이터베이스가 같은 자원(CPU, 메모리 등)을 공유하므로 둘 중 하나라도 자원을 모두 사용하거나, 서버 장애가 발생하면 전체 서비스가 완전히 죽는다.
 서버 자원을 효율적으로 사용하기 어렵다. =&amp;gt; 애플리케이션, 데이터베이스가 각 속성에 따라 더 중요한 최적화를 필요한 설정이 다를 수 있음</description>
    </item>
    
    <item>
      <title>인스턴스 생성/접속</title>
      <link>https://jjamong.github.io/docs/aws/ec2/instancecreate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/aws/ec2/instancecreate/</guid>
      <description>위치 : 인스턴스 &amp;gt; 인스턴스
인스턴스 목록을 확인할 수 있다.
인스턴스 시작 버튼을 선택하여 인스턴스를 생성한다.
1. 단계 1: AMI 선택 AMI(Amazon Machine Image)는 원하는 EC2 환경(OS, 애플리케이션 등)을 구성한 이미지로 EC2에 미리 셋팅한 AMI를 설정하는 구조다.
2. 단계 2: 인스턴스 유형 선택 EC2 서버의 CPU, 메모리, 디스크 등 스펙을 설정한다.
3. 단계 3: 인스턴스 세부 정보 구성 인스턴스 상세 정보 구성. (기본 값으로 두고 다음 진행)
4. 단계 4: 스토리지 추가 인스턴스 스토리지 추가.</description>
    </item>
    
    <item>
      <title>웹서버</title>
      <link>https://jjamong.github.io/docs/aws/ec2/webserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/aws/ec2/webserver/</guid>
      <description>웹서버 Apache url https://www.apachelounge.com/download/
 window 계열은 위 주소에서 다운 리눅스 계열은 yum 설치  Apache 패키지 목록 명령어 $ yum list | grep httpd  httpd가 이름에 포함된 패키지 목록 확인.
Apache 2.2 패키지 명은 httpd 이며, 2.4 패키지 명은 httpd24이다.
Apache 설치 명령어 $ sudo yum install httpd24  Apache 시작/종료/재시작 // Apache 시작 $ sudo service httpd start // Apache 종료 $ sudo service httpd stop // Apache 재시작 $ sudo service httpd restart  Apache 접속 서버를 실행했는데도 아래와 같이 접속되지 않는다면, EC2 HTTP 보안그룹을 확인해 보자.</description>
    </item>
    
    <item>
      <title>보안그룹</title>
      <link>https://jjamong.github.io/docs/aws/ec2/securitygroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/aws/ec2/securitygroup/</guid>
      <description>보안그룹 위치 인스턴스 &amp;gt; 네트워크 &amp;gt; 보안 그룹 변경
인스턴스 방화벽(인바운드/아웃바운드)을 설정한다. EC2가 시작상태에서도 가능하다.
보안 그룹 변경 팝업에서 원하는 보안 그룹을 설정한다. HTTP/HTTPS 위치 : 네트워크 및 보안 &amp;gt; 보안 그룹
HTTP/HTTPS를 설정한다.</description>
    </item>
    
  </channel>
</rss>