<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on 짜몽 개발 연구소</title>
    <link>https://jjamong.github.io/docs/etc/hugo/</link>
    <description>Recent content in Hugo on 짜몽 개발 연구소</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 27 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jjamong.github.io/docs/etc/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo Templating 소개</title>
      <link>https://jjamong.github.io/docs/etc/hugo/tempates/introduction/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/etc/hugo/tempates/introduction/</guid>
      <description>https://gohugo.io/templates/introduction/
Hugo는 템플릿의 기준으로 Go의 html/template 및 text/template 라이브러리를 사용한다.
기본 구문 Go 템플릿은 변수와 기능이 추가된 HTML파일이다. Go Template 변수와 기능은 {{}}내에서도 이용할 수 있다.
미리 정의된 변수 액세스 미리 정의된 변수는 현재 범위에 이미 존재하는 변수 (아래의 변수 섹션의 .Title 예제처럼) 또는 사용자 지정 변수일 수 있음 (같은 섹션의 $address 예시처럼.)
{{ .Title }} {{ $address }}  함수에 대한 매개변수는 공백으로 구분된다. 일반적인 구문은 다음과 같다.</description>
    </item>
    
    <item>
      <title>프론트 매터</title>
      <link>https://jjamong.github.io/docs/etc/hugo/content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/etc/hugo/content/</guid>
      <description> slug 아래와 같이 정의될 때, URL의 파일명을 대체 할 수 있다.
content/posts/old-post.md
--- title: New Post slug: &amp;quot;new-post&amp;quot; ---  URL의 파일명 부분이 slug로 대체된다.
example.com/posts/new-post/  url 원하는 URL로 설정 할 수 있다.
content/posts/old-url.md
--- title: Old URL url: /blog/new-url/ ---  URL 이 설정한 url로 변경된다.
https://example.com/blog/new-url/  </description>
    </item>
    
    <item>
      <title>디렉토리 구조</title>
      <link>https://jjamong.github.io/docs/etc/hugo/directory_structure/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/etc/hugo/directory_structure/</guid>
      <description>https://gohugo.io/getting-started/directory-structure/
명령창에서 hugo new site 실행하면 다음 구성으로 디렉토리 구조가 생성된다.
. ├── archetypes ├── config.toml ├── content ├── data ├── layouts ├── static └── themes  디렉토리 구조 설명 archetypes https://gohugo.io/content-management/archetypes/
assets Hugo Pipes에서 처리해야 하는 모든 파일을 저장한다.
참고 : assets 디렉토리는 기본적으로 생성되지 않음.
config data content layouts static 모든 정적 컨텐츠 저장</description>
    </item>
    
    <item>
      <title>컨텐트 포맷</title>
      <link>https://jjamong.github.io/docs/etc/hugo/content_format/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/etc/hugo/content_format/</guid>
      <description>컨텐트 포맷 HTML과 Markdown은 모두 지원되는 콘텐츠 형식이다.</description>
    </item>
    
    <item>
      <title>컨텐트 포맷</title>
      <link>https://jjamong.github.io/docs/etc/hugo/content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/etc/hugo/content/</guid>
      <description>컨텐트 포맷 HTML과 Markdown은 모두 지원되는 콘텐츠 형식이다.</description>
    </item>
    
    <item>
      <title>프론트 매터</title>
      <link>https://jjamong.github.io/docs/etc/hugo/front_matter/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jjamong.github.io/docs/etc/hugo/front_matter/</guid>
      <description> slug 아래와 같이 정의될 때, URL의 파일명을 대체 할 수 있다.
content/posts/old-post.md
--- title: New Post slug: &amp;quot;new-post&amp;quot; ---  URL의 파일명 부분이 slug로 대체된다.
example.com/posts/new-post/  url 원하는 URL로 설정 할 수 있다.
content/posts/old-url.md
--- title: Old URL url: /blog/new-url/ ---  URL 이 설정한 url로 변경된다.
https://example.com/blog/new-url/  </description>
    </item>
    
  </channel>
</rss>